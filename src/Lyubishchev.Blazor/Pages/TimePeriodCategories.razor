@page "/timePeriodCategories"
@using Lyubishchev.TimePeriodCategories
@using Lyubishchev.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inherits LyubishchevComponentBase
@inject ITimePeriodCategoryAppService TimePeriodCategoryAppService
@inject AbpBlazorMessageLocalizerHelper<LyubishchevResource> LH
<Card>
    <CardHeader>
        <Row>
            <Column ColumnSize="ColumnSize.Is6">
                <h2>@L["TimePeriodCategory"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.Is6">
                <Paragraph TextAlignment="TextAlignment.End">
                    @if (CanCreateTimePeriodCategory)
                    {
                        <Button Color="Color.Primary"
                            Clicked="OpenCreateTimePeriodCategoryModal">
                            @L["TimePeriodCategory_NewTimePeriodCategory"]
                        </Button>
                    }
                </Paragraph>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="TimePeriodCategoryDto"
                  Data="TimePeriodCategoryList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="TimePeriodCategoryDto"
                                Field="@nameof(TimePeriodCategoryDto)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                @if (CanEditTimePeriodCategory)
                                {
                                    <DropdownItem Clicked="() => OpenEditTimePeriodCategoryModal(context)">
                                        @L["Edit"]
                                    </DropdownItem>
                                }
                                @if (CanDeleteTimePeriodCategory)
                                {
                                    <DropdownItem Clicked="() => DeleteTimePeriodCategoryAsync(context)">
                                        @L["Delete"]
                                    </DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridDateColumn TItem="TimePeriodCategoryDto"
                                    Field="@nameof(TimePeriodCategoryDto.Name)"
                                    Caption="@L["TimePeriodCategory_Name"]">
                </DataGridDateColumn>
                <DataGridDateColumn TItem="TimePeriodCategoryDto"
                                    Field="@nameof(TimePeriodCategoryDto.Description)"
                                    Caption="@L["TimePeriodCategory_Description"]">
                    <DisplayTemplate>
                        @context.Description
                    </DisplayTemplate>
                </DataGridDateColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateTimePeriodCategoryModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["TimePeriodCategory_NewTimePeriodCategory"]</ModalTitle>
                <CloseButton Clicked="CloseCreateTimePeriodCategoryModal"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewTimePeriodCategory" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize"> 
                        <Field>
                            <FieldLabel>@L["TimePeriodCategory_Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewTimePeriodCategory.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["TimePeriodCategory_Description"]</FieldLabel>
                        <MemoEdit Rows="5" @bind-Text="@NewTimePeriodCategory.Description">
                            <Feedback>
                                <ValidationError/>
                            </Feedback>
                        </MemoEdit>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateTimePeriodCategoryModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateTimePeriodCategoryAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
@code {

}
